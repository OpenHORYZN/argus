// This file is automatically generated, so please do not edit it.
// Generated by `flutter_rust_bridge`@ 2.1.0.

// ignore_for_file: invalid_use_of_internal_member, unused_import, unnecessary_import

import '../frb_generated.dart';
import 'package:flutter_rust_bridge/flutter_rust_bridge_for_generated.dart';
import 'package:freezed_annotation/freezed_annotation.dart' hide protected;
part 'mission.freezed.dart';

// These function are ignored because they are on traits that is not defined in current crate (put an empty `#[frb]` on it to unignore): `from`, `from`

Future<void> sendMissionPlan({required List<FlutterMissionNode> plan}) =>
    RustLib.instance.api.crateApiMissionSendMissionPlan(plan: plan);

@freezed
sealed class FlutterMissionNode with _$FlutterMissionNode {
  const FlutterMissionNode._();

  const factory FlutterMissionNode.init() = FlutterMissionNode_Init;
  const factory FlutterMissionNode.takeoff({
    required double altitude,
  }) = FlutterMissionNode_Takeoff;
  const factory FlutterMissionNode.waypoint(
    FlutterWaypoint field0,
  ) = FlutterMissionNode_Waypoint;
  const factory FlutterMissionNode.delay(
    double field0,
  ) = FlutterMissionNode_Delay;
  const factory FlutterMissionNode.findSafeSpot() =
      FlutterMissionNode_FindSafeSpot;
  const factory FlutterMissionNode.transition() = FlutterMissionNode_Transition;
  const factory FlutterMissionNode.land() = FlutterMissionNode_Land;
  const factory FlutterMissionNode.precLand() = FlutterMissionNode_PrecLand;
  const factory FlutterMissionNode.end() = FlutterMissionNode_End;
}

@freezed
sealed class FlutterWaypoint with _$FlutterWaypoint {
  const FlutterWaypoint._();

  const factory FlutterWaypoint.localOffset(
    double field0,
    double field1,
    double field2,
  ) = FlutterWaypoint_LocalOffset;
  const factory FlutterWaypoint.globalFixedHeight({
    required double lat,
    required double lon,
    required double alt,
  }) = FlutterWaypoint_GlobalFixedHeight;
  const factory FlutterWaypoint.globalRelativeHeight({
    required double lat,
    required double lon,
    required double heightDiff,
  }) = FlutterWaypoint_GlobalRelativeHeight;
}
